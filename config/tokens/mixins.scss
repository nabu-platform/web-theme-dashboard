$button-font-size: $font-size-small;
$button-font-weight: $font-weight-emphasis;
$button-line-height: 1 !important;
$button-border-radius: 3px;
$button-margin: 1rem;

$button-height-small: 2rem;
$button-height: 2.25rem;
$button-height-large: 2.5rem;

@function button-get-size($size: "normal") {
	$button-sizes: (
		small: $button-height-small,
		normal: $button-height,
		large: $button-height-large
	);
	@if map-has-key($map: $button-sizes, $key: $size) {
		@return map-get($map: $button-sizes, $key: $size);
	}
	@else {
		@warn "Requested size '#{$size}' is not available.";
		@return null;
	}
}
@mixin button-small {
	height: button-get-size("small");
}
@mixin button-large {
	height: button-get-size("large");
}

@mixin button-solid($bg, $text) {
	background: $bg;
	color: $text;

	&:hover {
		background: darken($bg, 5%);
		color: $text;
		transition: all 0.3s ease;
	}
}
@mixin button-outline($color) {
	color: $color;
	box-shadow: $color 0px 0px 0px 1px inset;
	background: transparent;

	&:hover {
		background: lighten($color, 80%);
		color: $color;
		transition: all 0.3s ease;
	}
}
@mixin button-base {
	height: button-get-size("normal");
	appearance: none;
	font-family: $font-family;
	font-weight: $button-font-weight !important;
	height: 2.25rem;
	margin: 0 !important;
	margin-bottom: $button-margin;
	line-height: $button-line-height;
	cursor: pointer;
	border-radius: $button-border-radius;
	font-size: $button-font-size !important;
	border: none;
	padding: 0 1.5rem;
	&.large {
		@include button-large;
	}
	&.small {
		@include button-small;
	}
	&.round {
		border-radius: 100px;
	}
	&.full {
		width: 100%;
	}
	.icon,
	.fa {
		position: relative;
		margin-right: $space-sm;
		font-size: $font-size-base;
		color: inherit !important;
		position: relative;
		transform: none;
		top: auto;
		left: auto;
	}
	&:hover {
		* {
			cursor: pointer;
		}
		transform: translate(0, 0) !important;
	}
	&:disabled {
		cursor: none;
		pointer-events: none;
	}
}
